name: Deploy to Lightsail

on:
  push:
    branches: [ "master", "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: deploy
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          script: |
            set -e
            APP_NAME=watch-party
            APP_DIR=/srv/$APP_NAME
            
            # Clone or update repo
            if [ ! -d "$APP_DIR" ]; then
              git clone https://github.com/EL-HOUSS-BRAHIM/watch-party.git $APP_DIR
              cd $APP_DIR
            else
              cd $APP_DIR
              git fetch origin
              git reset --hard origin/master
            fi
            
            # Setup environment files if they don't exist
            if [ ! -f "$APP_DIR/backend/.env" ]; then
              cp backend/.env.example backend/.env
              echo "‚ö†Ô∏è  Created backend/.env from example - please customize it!"
            fi
            
            if [ ! -f "$APP_DIR/frontend/.env.local" ]; then
              cp frontend/.env.example frontend/.env.local
              echo "‚úÖ Created frontend/.env.local with correct API URLs"
            fi
            
            # Build and deploy with Docker Compose
            docker-compose build --no-cache
            docker-compose up -d --remove-orphans
            
            # Wait for services to be ready
            sleep 30
            
            # Run initial setup if this is first deployment
            if docker-compose exec -T backend python manage.py showmigrations --plan | grep -q "\[ \]"; then
              echo "üîß Running initial Django setup..."
              docker-compose exec -T backend python manage.py migrate
              docker-compose exec -T backend python manage.py collectstatic --noinput
            fi
            
            # Cleanup
            docker system prune -f
